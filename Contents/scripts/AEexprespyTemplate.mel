proc _registerNodeHelp(string $type, string $cmd)
{
    global string $gAttributeEditorNodeTypeArray[];
    global string $gAttributeEditorHelpCommandArray[];

    int $idx, $len = size($gAttributeEditorNodeTypeArray);
    for ($idx = 0; $idx < $len; ++$idx) {
        if ($type == $gAttributeEditorNodeTypeArray[$idx]) break;
    }

    if ($idx < $len) {
        $gAttributeEditorHelpCommandArray[$idx] = $cmd;
    } else {
        $gAttributeEditorNodeTypeArray[$idx] = $type;
        $gAttributeEditorHelpCommandArray[$idx] = $cmd;
    }
}

global proc exprespy_code_new(string $plug)
{
    python("exprespy.ae.code_new('"+ $plug +"')");
}

global proc exprespy_code_replace(string $plug)
{
    python("exprespy.ae.code_replace('"+ $plug +"')");
}

global proc exprespy_input_new(string $plug)
{
    python("exprespy.ae.input_new('"+ $plug +"')");
}

global proc exprespy_input_replace(string $plug)
{
    python("exprespy.ae.input_replace('"+ $plug +"')");
}

global proc AEexprespyTemplate(string $nodename)
{
    string $url = "https://github.com/ryusas/maya_exprespy";
    _registerNodeHelp("exprespy", "showHelp -a \""+ $url +"\"");

    python("import exprespy.ae");

    editorTemplate("-beginScrollLayout");

    editorTemplate("-beginLayout","Python Expression Code", "-collapse",0);
        editorTemplate("-callCustom","exprespy_code_new","exprespy_code_replace","code");
    editorTemplate("-endLayout");
    editorTemplate("-beginLayout","Inputs", "-collapse",1);
        editorTemplate("-callCustom","exprespy_input_new","exprespy_input_replace","input");
    editorTemplate("-endLayout");

    editorTemplate("-suppress","inputsAsApi1Object");
    editorTemplate("-suppress","compiled");
    editorTemplate("-suppress","output");

    AEdependNodeTemplate($nodename);

    editorTemplate("-addExtraControls");
    editorTemplate("-endScrollLayout");
}
